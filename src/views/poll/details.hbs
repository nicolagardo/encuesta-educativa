<body id="fondo">
    
</body>
<style> 
    #fondo{
        background-image: url("https://cdn.pixabay.com/photo/2015/08/26/07/03/background-908172_960_720.jpg");
		background-repeat: no-repeat;
		background-size: cover;
		background-position: center;
		background-attachment: fixed;

    }
</style>
<div class="container" id="fondo">
    <div class="row">
        <div class="col-sm">
            <div class="card" style="width: 21rem;">
                <div class="card-header">
                    <h4 id="title">{{data.poll}}</h4>
                    
                </div>
                <div class="card-body">
                    <div class="col-md-10">
                        <div class="row">
                            <p>{{data.responses}}</p>
                            &nbsp;
                            <p>opciones</p>
                        </div>
                        <div class="row">
                            <p id="votoss">{{votes}}</p>
                           
                            &nbsp;
                            <p>votos</p>
                        </div>
                        <div class="row">
                            <a class="btn btn-info"
                                href="/votes?id={{data.id}}&poll={{data.poll}}&multiple={{multiple}}">
                                Realizar votos
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm">
            <h3>Eliga Opcion de Grafico:</h3>
            <!--<div class="card">-->
                    <!--<button onclick="ocultar('top_x_div')">Grafico Histograma</button>-->
            <!--</div>-->
            <!--<div class="card">
                <div class="card-body" id="top_x_div" style="width: 500px; height: 300px; display_none">
                </div>
            </div>-->
            <div class="card">
                <button onclick="ocultar('piechart_3d')">Grafico de Torta 3D</button>
                <div id="piechart_3d" style="width: 500px; height: 300px; display: none"></div>
            </div>
            <div class="card">
                <button onclick="ocultar('donutchart')">Grafico de dona</button>
                <div id="donutchart" style="width: 500px; height: 300px;display: none"></div>
            </div>
            <div class="card"><button onclick="ocultar('columnchart_values')">Grafico de Columnas</button>   </div>
            
            <div class="card"> 
                <div id="columnchart_material" style="width: 800px; height: 500px;"></div>
                <div id="columnchart_values" style="width: 500px; height: 300px;display:none"></div>
            </div>
            
        </div>
    </div>

</div>
 {{!-- <script src="/socket.io/socket.io.js"></script> --}}
<script>
    //let socket =io()
    //console.log("En votes: ", {{votes}})
    //socket.emit('votook', 'alguien esta por votar');
    
</script>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
{{!-- <script src="socket.io/socket.io.js"></script> --}}
<script type="text/javascript">

    //google.charts.load('current', { 'packages': ['bar'] });
    //google.charts.setOnLoadCallback(drawStuff);
    //google.charts.load('current', { 'packages': ['corechart'] });
    //google.charts.setOnLoadCallback(drawChart);
    //google.charts.load("current", { "packages": ["corechart"] });
    //google.charts.setOnLoadCallback(drawChart);
    //Histograma
    /*function drawStuff() {
        let responses = "{{responses}}";
        let array = responses.split(",");
        var resArray1 = new Array();
        resArray1[0] = 'Respuesta';;
        resArray1[1] = 'Voto';
        let resArray2 = new Array();
        resArray2[0] = resArray1;
        let count = 0;
        let j = 1;
        resArray1 = new Array();
        for (let i = 0; i < array.length; i++) {
            if (count == 1) {
                resArray1[count] = parseInt(array[i], 10);
                resArray2[j] = resArray1;
                count = 0;
                j++;
                resArray1 = new Array();
            } else {
                resArray1[count] = array[i];
                count++;
            }
        }
        var data = new google.visualization.arrayToDataTable(resArray2);
        var options = {
            width: 0,
            legend: { position: 'none' },
            chart: {
                title: "{{data.poll}}",
                subtitle: 'Sistema de encuestas'
            },
            axes: {
                x: {
                    0: { side: 'top', label: 'Para detalle posicione el cursor sobre el grafico' } // Top x-axis.
                }
            },
            bar: { groupWidth: "90%" }
        };
        var chart = new google.charts.Bar(document.getElementById('top_x_div'));
        chart.draw(data, google.charts.Bar.convertOptions(options));
        console.log(resArray2);
    }*/

    //dona
    google.charts.load('current', { 'packages': ['corechart'] });
    google.charts.setOnLoadCallback(drawChart);


    function drawChart() {
        let responses = "{{responses}}";
        let array = responses.split(",");
        var resArray1 = new Array();
        resArray1[0] = 'Respuesta';;
        resArray1[1] = 'Voto';
        let resArray2 = new Array();
        resArray2[0] = resArray1;
        let count = 0;
        let j = 1;
        resArray1 = new Array();
        for (let i = 0; i < array.length; i++) {
            if (count == 1) {
                resArray1[count] = parseInt(array[i], 10);
                resArray2[j] = resArray1;
                count = 0;
                j++;
                resArray1 = new Array();
            } else {
                resArray1[count] = array[i];
                count++;
            }
        }

        var data = new google.visualization.arrayToDataTable(resArray2);
        var options = {
            pieHole: 0.5,
            pieSliceTextStyle: {
                color: 'black',
            },
            legend: 'none'
        };




        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
        chart.draw(data, options);

    }
    //torta 3d

    google.charts.load("current", { packages: ["corechart"] });
    google.charts.setOnLoadCallback(pieChart);
    function pieChart() {
        let responses = "{{responses}}";
        let array = responses.split(",");
        var resArray1 = new Array();
        resArray1[0] = 'Respuesta';;
        resArray1[1] = 'Voto';
        let resArray2 = new Array();
        resArray2[0] = resArray1;
        let count = 0;
        let j = 1;
        resArray1 = new Array();
        for (let i = 0; i < array.length; i++) {
            if (count == 1) {
                resArray1[count] = parseInt(array[i], 10);
                resArray2[j] = resArray1;
                count = 0;
                j++;
                resArray1 = new Array();
            } else {
                resArray1[count] = array[i];
                count++;
            }
        }
        var data = new google.visualization.arrayToDataTable(resArray2);


        var options = {
            title: 'Grafico de torta 3D',
            is3D: true,
        };

        var chart = new google.visualization.PieChart(document.getElementById('piechart_3d'));
        chart.draw(data, options);
        //var chart = new google.charts.Bar(document.getElementById('piechart_3d'));
        //chart.draw(data, google.charts.Bar.convertOptions(options));
        console.log(resArray2);
    }
    //Column
    //Histograma
    /*google.charts.load('current', { 'packages': ['bar'] });
    google.charts.setOnLoadCallback(drawStuff);
    function drawStuff() {
        let responses = "{{responses}}";
        let array = responses.split(",");
        var resArray1 = new Array();
        resArray1[0] = 'Respuesta';;
        resArray1[1] = 'Voto';
        let resArray2 = new Array();
        resArray2[0] = resArray1;
        let count = 0;
        let j = 1;
        resArray1 = new Array();
        for (let i = 0; i < array.length; i++) {
            if (count == 1) {
                resArray1[count] = parseInt(array[i], 10);
                resArray2[j] = resArray1;
                count = 0;
                j++;
                resArray1 = new Array();
            } else {
                resArray1[count] = array[i];
                count++;
            }
        }
        var data = new google.visualization.arrayToDataTable(resArray2);
        var options = {
            width: 0,
            height:200,
            legend: { position: 'none' },
            /*chart: {
                title: "{{data.poll}}",
                subtitle: 'Sistema Mini Encuestas'
            },*/
            /*axes: {
                x: {
                    0: { side: 'top', label: 'Para detalles posicionece sobre el grafico' } // Top x-axis.
                }
            },
            bar: { groupWidth: "40%" }
        };
        var chart = new google.charts.Bar(document.getElementById('columnchart_values'));
        chart.draw(data, google.charts.Bar.convertOptions(options));
        console.log(resArray2);
    }*/
    google.charts.load('current', {'packages':['bar']});
      google.charts.setOnLoadCallback(drawChart);

      function drawChart() {
        var data = google.visualization.arrayToDataTable([
          ['Year', 'Sales', 'Expenses', 'Profit'],
          ['2014', 1000, 400, 200],
          ['2015', 1170, 460, 250],
          ['2016', 660, 1120, 300],
          ['2017', 1030, 540, 350]
        ]);

        var options = {
          chart: {
            title: 'Company Performance',
            subtitle: 'Sales, Expenses, and Profit: 2014-2017',
          }
        };

        var chart = new google.charts.Bar(document.getElementById('columnchart_material'));

        chart.draw(data, google.charts.Bar.convertOptions(options));
      }

    
    
    function ocultar(elemento) {
        var x = document.getElementById(elemento);
        if (x.style.display === "none") {
            x.style.display = "block";
        } else {
            x.style.display = "none";
        }
    }
</script>

 

<<<<<<< HEAD


</script>
=======
>>>>>>> 41c6f33e19a774469f227361b519d9aad5c88e51
